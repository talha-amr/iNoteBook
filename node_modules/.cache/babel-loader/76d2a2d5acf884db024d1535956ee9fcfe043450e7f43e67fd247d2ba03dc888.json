{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web Dev\\\\React js\\\\inotebook\\\\src\\\\context\\\\NoteState.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport NoteContext from \"./NoteContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NoteState(props) {\n  _s();\n  const host = \"http://localhost:5000/\";\n  const [notes, setNotes] = useState([]);\n  const hardcodeNotes = [];\n  const getNotes = async () => {\n    const response = await fetch(`${host}api/notes/fetchallnotes`, {\n      method: 'GET',\n      headers: {\n        'Accept': '*/*',\n        'User-Agent': 'Thunder Client (https://www.thunderclient.com)',\n        'auth-token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjg5MWZkNGQyNGQ1ODJhZjE1YjliN2JlIn0sImlhdCI6MTc1NDQ2MzgwMn0.gKhLAuMPCQNf0DjGdAzTVgHa85VmItPk408CXuOdMe8',\n        'Content-Type': 'application/json'\n      }\n    });\n    const allNotes = await response.json();\n    console.log(allNotes);\n    setNotes(allNotes);\n  };\n  async function addNote(title1, description1, tag1) {\n    const response = await fetch(`${host}api/notes/createNote`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Content-Type': 'application/json',\n        'auth-token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjg5MWZkNGQyNGQ1ODJhZjE1YjliN2JlIn0sImlhdCI6MTc1NDQ2MzgwMn0.gKhLAuMPCQNf0DjGdAzTVgHa85VmItPk408CXuOdMe8'\n      },\n      body: JSON.stringify({\n        title: title1,\n        description: description1,\n        tag: tag1\n      })\n    });\n\n    // ✅ Only parse once\n    const json = await response.json();\n    console.log(\"Server response:\", json);\n    if (!response.ok) {\n      throw new Error(\"Server error: \" + ((json === null || json === void 0 ? void 0 : json.error) || response.status));\n    }\n\n    // Update UI\n    setNotes(notes.concat(json));\n  }\n  const deleteNote = async id => {\n    const response = await fetch(`${host}api/notes/deleteNote/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'auth-token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjg5MWZkNGQyNGQ1ODJhZjE1YjliN2JlIn0sImlhdCI6MTc1NDQ2MzgwMn0.gKhLAuMPCQNf0DjGdAzTVgHa85VmItPk408CXuOdMe8'\n      }\n    });\n    const text = await response.text();\n    try {\n      const json = JSON.parse(text);\n      console.log(json);\n\n      // ✅ Only update local state if deletion was successful\n      if (json.success) {\n        setNotes(prevNotes => prevNotes.filter(note => note._id !== id));\n      }\n    } catch (err) {\n      console.error(\"Failed to parse JSON. Raw response:\", text);\n    }\n  };\n  async function editNote(id, title, description, tag) {\n    const response = await fetch(`${host}api/notes/updatenote/6891fd4d24d582af15b9b7be`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'auth-token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjg5MWZkNGQyNGQ1ODJhZjE1YjliN2JlIn0sImlhdCI6MTc1NDQ2MzgwMn0.gKhLAuMPCQNf0DjGdAzTVgHa85VmItPk408CXuOdMe8'\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n    const updatedNote = await response.json();\n    const newNotes = notes.map(note => {\n      if (note._id === id) {\n        return updatedNote;\n      }\n      return note;\n    });\n    setNotes(newNotes);\n  }\n  return /*#__PURE__*/_jsxDEV(NoteContext.Provider, {\n    value: {\n      notes,\n      addNote,\n      deleteNote,\n      getNotes,\n      editNote\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n_s(NoteState, \"GQLmJKrKSWtt27ULSmYSMpXke/c=\");\n_c = NoteState;\nvar _c;\n$RefreshReg$(_c, \"NoteState\");","map":{"version":3,"names":["React","useState","NoteContext","jsxDEV","_jsxDEV","NoteState","props","_s","host","notes","setNotes","hardcodeNotes","getNotes","response","fetch","method","headers","allNotes","json","console","log","addNote","title1","description1","tag1","body","JSON","stringify","title","description","tag","ok","Error","error","status","concat","deleteNote","id","text","parse","success","prevNotes","filter","note","_id","err","editNote","updatedNote","newNotes","map","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Web Dev/React js/inotebook/src/context/NoteState.js"],"sourcesContent":["import React, { useState } from \"react\"; \r\nimport NoteContext from \"./NoteContext\";\r\n\r\nexport default function NoteState(props) {\r\n  const host=\"http://localhost:5000/\"\r\n\r\n   const [notes, setNotes] = useState([]);\r\n  const hardcodeNotes = [ ];\r\nconst getNotes = async () => {\r\n  const response = await fetch(`${host}api/notes/fetchallnotes`, {\r\n    method: 'GET',\r\n    headers: {\r\n      'Accept': '*/*',\r\n      'User-Agent': 'Thunder Client (https://www.thunderclient.com)',\r\n      'auth-token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjg5MWZkNGQyNGQ1ODJhZjE1YjliN2JlIn0sImlhdCI6MTc1NDQ2MzgwMn0.gKhLAuMPCQNf0DjGdAzTVgHa85VmItPk408CXuOdMe8',\r\n      'Content-Type': 'application/json'\r\n    }\r\n  });\r\n  const allNotes = await response.json(); \r\n  console.log(allNotes);\r\n  setNotes(allNotes)\r\n};\r\n\r\nasync function addNote(title1, description1, tag1) {\r\n const response = await fetch(`${host}api/notes/createNote`, {\r\n  method: 'POST',\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n    'Content-Type': 'application/json',\r\n    'auth-token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjg5MWZkNGQyNGQ1ODJhZjE1YjliN2JlIn0sImlhdCI6MTc1NDQ2MzgwMn0.gKhLAuMPCQNf0DjGdAzTVgHa85VmItPk408CXuOdMe8'\r\n  },\r\n  body: JSON.stringify({\r\n    title: title1,\r\n    description: description1,\r\n    tag: tag1\r\n  })\r\n});\r\n\r\n// ✅ Only parse once\r\nconst json = await response.json(); \r\nconsole.log(\"Server response:\", json);\r\n\r\nif (!response.ok) {\r\n  throw new Error(\"Server error: \" + (json?.error || response.status));\r\n}\r\n\r\n// Update UI\r\nsetNotes(notes.concat(json));\r\n}\r\nconst deleteNote = async (id) => {\r\n  const response = await fetch(`${host}api/notes/deleteNote/${id}`, {\r\n    method: 'DELETE',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'auth-token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjg5MWZkNGQyNGQ1ODJhZjE1YjliN2JlIn0sImlhdCI6MTc1NDQ2MzgwMn0.gKhLAuMPCQNf0DjGdAzTVgHa85VmItPk408CXuOdMe8'\r\n    }\r\n  });\r\n\r\n  const text = await response.text();\r\n\r\n  try {\r\n    const json = JSON.parse(text);\r\n    console.log(json);\r\n\r\n    // ✅ Only update local state if deletion was successful\r\n    if (json.success) {\r\n      setNotes(prevNotes => prevNotes.filter(note => note._id !== id));\r\n    }\r\n\r\n  } catch (err) {\r\n    console.error(\"Failed to parse JSON. Raw response:\", text);\r\n  }\r\n};\r\n\r\nasync function editNote(id, title, description, tag) {\r\n  const response = await fetch(`${host}api/notes/updatenote/6891fd4d24d582af15b9b7be`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'auth-token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjg5MWZkNGQyNGQ1ODJhZjE1YjliN2JlIn0sImlhdCI6MTc1NDQ2MzgwMn0.gKhLAuMPCQNf0DjGdAzTVgHa85VmItPk408CXuOdMe8'\r\n    },\r\n    body: JSON.stringify({ title, description, tag })\r\n  });\r\n\r\n  const updatedNote = await response.json();\r\n\r\n  const newNotes = notes.map(note => {\r\n    if (note._id === id) {\r\n      return updatedNote; \r\n    }\r\n    return note;\r\n  });\r\n\r\n  setNotes(newNotes);\r\n}\r\n\r\n  return (\r\n    <NoteContext.Provider value={{notes,addNote,deleteNote,getNotes,editNote}}>\r\n      {props.children}\r\n    </NoteContext.Provider>\r\n  );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}