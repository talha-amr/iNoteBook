{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web Dev\\\\React js\\\\inotebook\\\\src\\\\components\\\\ModalForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Modal, Box, Typography, TextField, Button, Stack } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst modalStyle = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 400,\n  bgcolor: 'background.paper',\n  border: '2px solid #000',\n  boxShadow: 24,\n  p: 4\n};\nconst ModalForm = ({\n  open,\n  handleClose\n}) => {\n  _s();\n  // Local state for the form inputs, which will be cleared on close\n  const [noteTitle, setNoteTitle] = useState('');\n  const [noteContent, setNoteContent] = useState('');\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    // For now, we'll just close the modal without saving anything.\n    // You can add the saving logic here later.\n    console.log('Form submitted, but not saving yet.');\n    handleClose();\n    // Resetting the form fields for the next time the modal opens\n    setNoteTitle('');\n    setNoteContent('');\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"create-note-modal-title\",\n    \"aria-describedby\": \"create-note-modal-description\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: modalStyle,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        id: \"create-note-modal-title\",\n        variant: \"h6\",\n        component: \"h2\",\n        children: \"Create a New Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        onSubmit: handleFormSubmit,\n        sx: {\n          mt: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Stack, {\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            required: true,\n            fullWidth: true,\n            label: \"Note Title\",\n            value: noteTitle,\n            onChange: e => setNoteTitle(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            required: true,\n            fullWidth: true,\n            multiline: true,\n            rows: 4,\n            label: \"Note Content\",\n            value: noteContent,\n            onChange: e => setNoteContent(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          sx: {\n            mt: 2\n          },\n          children: \"Save Note\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(ModalForm, \"+XU6+Wy/Nj//2DwCZ4DFzS8m/io=\");\n_c = ModalForm;\nexport default ModalForm;\nvar _c;\n$RefreshReg$(_c, \"ModalForm\");","map":{"version":3,"names":["React","useState","Modal","Box","Typography","TextField","Button","Stack","jsxDEV","_jsxDEV","modalStyle","position","top","left","transform","width","bgcolor","border","boxShadow","p","ModalForm","open","handleClose","_s","noteTitle","setNoteTitle","noteContent","setNoteContent","handleFormSubmit","e","preventDefault","console","log","onClose","children","sx","id","variant","component","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","mt","spacing","required","fullWidth","label","value","onChange","target","multiline","rows","type","_c","$RefreshReg$"],"sources":["D:/Web Dev/React js/inotebook/src/components/ModalForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Modal, Box, Typography, TextField, Button, Stack } from '@mui/material';\r\n\r\nconst modalStyle = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 400,\r\n  bgcolor: 'background.paper',\r\n  border: '2px solid #000',\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nconst ModalForm = ({ open, handleClose }) => {\r\n  // Local state for the form inputs, which will be cleared on close\r\n  const [noteTitle, setNoteTitle] = useState('');\r\n  const [noteContent, setNoteContent] = useState('');\r\n\r\n  const handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    // For now, we'll just close the modal without saving anything.\r\n    // You can add the saving logic here later.\r\n    console.log('Form submitted, but not saving yet.');\r\n    handleClose();\r\n    // Resetting the form fields for the next time the modal opens\r\n    setNoteTitle('');\r\n    setNoteContent('');\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      open={open}\r\n      onClose={handleClose}\r\n      aria-labelledby=\"create-note-modal-title\"\r\n      aria-describedby=\"create-note-modal-description\"\r\n    >\r\n      <Box sx={modalStyle}>\r\n        <Typography id=\"create-note-modal-title\" variant=\"h6\" component=\"h2\">\r\n          Create a New Note\r\n        </Typography>\r\n\r\n        <Box component=\"form\" onSubmit={handleFormSubmit} sx={{ mt: 2 }}>\r\n          <Stack spacing={2}>\r\n            <TextField\r\n              required\r\n              fullWidth\r\n              label=\"Note Title\"\r\n              value={noteTitle}\r\n              onChange={(e) => setNoteTitle(e.target.value)}\r\n            />\r\n            <TextField\r\n              required\r\n              fullWidth\r\n              multiline\r\n              rows={4}\r\n              label=\"Note Content\"\r\n              value={noteContent}\r\n              onChange={(e) => setNoteContent(e.target.value)}\r\n            />\r\n          </Stack>\r\n          <Button type=\"submit\" variant=\"contained\" sx={{ mt: 2 }}>\r\n            Save Note\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ModalForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}