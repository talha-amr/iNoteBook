{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web Dev\\\\React js\\\\inotebook\\\\src\\\\components\\\\LoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Paper, Box, Typography, TextField, Button, Container } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  const [credentials, setCredentials] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const handleChange = e => {\n    setCredentials({\n      ...credentials,\n      [e.target.name]: e.target.value\n    });\n  };\n  const loginCheck = async () => {\n    const data = JSON.Stringify(credentials);\n    const response = await fetch(`http://localhost:5000/api/auth/login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: data.Stringify(data)\n    });\n    let json = await response.json();\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    loginCheck();\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      flexGrow: 1,\n      py: 10,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        sx: {\n          p: 4,\n          width: 350,\n          display: \"flex\",\n          flexDirection: \"column\",\n          gap: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          textAlign: \"center\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Email\",\n          name: \"email\",\n          value: credentials.email,\n          onChange: handleChange,\n          variant: \"outlined\",\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Password\",\n          name: \"password\",\n          value: credentials.password,\n          type: \"password\",\n          onChange: handleChange,\n          variant: \"outlined\",\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: handleSubmit,\n          fullWidth: true,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"yvmWJYgQrU09+Z+UdIC88SxD72s=\");\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","Paper","Box","Typography","TextField","Button","Container","jsxDEV","_jsxDEV","LoginPage","_s","credentials","setCredentials","email","password","handleChange","e","target","name","value","loginCheck","data","JSON","Stringify","response","fetch","method","headers","body","json","handleSubmit","preventDefault","children","display","justifyContent","alignItems","flexGrow","py","elevation","sx","p","width","flexDirection","gap","variant","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","label","onChange","fullWidth","type","onClick","_c","$RefreshReg$"],"sources":["D:/Web Dev/React js/inotebook/src/components/LoginPage.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { Paper, Box, Typography, TextField, Button, Container } from \"@mui/material\";\r\n\r\nconst LoginPage = () => {\r\n    const[credentials,setCredentials]=useState({email:\"\",password:\"\"})\r\n      const handleChange = (e) => {\r\n        setCredentials({ ...credentials, [e.target.name]: e.target.value });\r\n    };\r\n  const loginCheck=  async () => {\r\n        const data= JSON.Stringify(credentials)\r\n   \r\n        const response = await fetch(`http://localhost:5000/api/auth/login`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: data.Stringify(data)\r\n            \r\n        });\r\n        let json = await response.json();\r\n        \r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        loginCheck();\r\n    }\r\n  return (\r\n    <Container>\r\n    <Box\r\n      display=\"flex\"\r\n      justifyContent=\"center\"\r\n      alignItems=\"center\"\r\n      flexGrow={1} \r\n      py={10}\r\n    >\r\n      <Paper\r\n        elevation={3}\r\n        sx={{\r\n          p: 4,\r\n          width: 350,\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          gap: 2,\r\n        }}\r\n      >\r\n        <Typography variant=\"h5\" textAlign=\"center\">\r\n          Login\r\n        </Typography>\r\n      <TextField label=\"Email\" name='email' value={credentials.email} onChange={handleChange} variant=\"outlined\" fullWidth />\r\n      <TextField label=\"Password\" name='password' value={credentials.password} type=\"password\" onChange={handleChange} variant=\"outlined\" fullWidth />\r\n        <Button variant=\"contained\"  onClick={handleSubmit} fullWidth>\r\n          Login\r\n        </Button>\r\n      </Paper>\r\n    </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\n\r\nexport default LoginPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}