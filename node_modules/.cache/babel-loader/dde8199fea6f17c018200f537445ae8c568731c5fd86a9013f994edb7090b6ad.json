{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web Dev\\\\React js\\\\inotebook\\\\src\\\\components\\\\LoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from 'react';\nimport { Paper, Box, Typography, TextField, Button, Container } from \"@mui/material\";\nimport { useNavigate } from \"react-router-dom\";\nimport UserContext from '../context/UserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginPage = () => {\n  _s();\n  useContext;\n  let context = useContext(UserContext);\n  const {\n    loginCheck\n  } = context;\n  const [credentials, setCredentials] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const handleChange = e => {\n    setCredentials({\n      ...credentials,\n      [e.target.name]: e.target.value\n    });\n  };\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const result = await loginCheck({\n      email: credentials.email,\n      password: credentials.password\n    });\n    if (loginCheck.success) {\n      navigate('/');\n    } else {\n      alert(\"Invalid Credentials\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        maxWidth: 400,\n        margin: \"auto\",\n        mt: 8,\n        p: 3,\n        borderRadius: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        textAlign: \"center\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Email\",\n        name: \"email\",\n        value: credentials.email,\n        onChange: handleChange,\n        variant: \"outlined\",\n        fullWidth: true,\n        sx: {\n          mt: 3\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Password\",\n        name: \"password\",\n        value: credentials.password,\n        type: \"password\",\n        sx: {\n          mt: 3\n        },\n        onChange: handleChange,\n        variant: \"outlined\",\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        sx: {\n          my: 3\n        },\n        onClick: handleSubmit,\n        fullWidth: true,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginPage, \"MHlk2rSbvgfimd9S+5Y2pbxi5PI=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useContext","useState","Paper","Box","Typography","TextField","Button","Container","useNavigate","UserContext","jsxDEV","_jsxDEV","LoginPage","_s","context","loginCheck","credentials","setCredentials","email","password","handleChange","e","target","name","value","navigate","handleSubmit","preventDefault","result","success","alert","children","elevation","sx","maxWidth","margin","mt","p","borderRadius","variant","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","label","onChange","fullWidth","type","my","onClick","_c","$RefreshReg$"],"sources":["D:/Web Dev/React js/inotebook/src/components/LoginPage.js"],"sourcesContent":["import React, { useContext, useState } from 'react'\r\nimport { Paper, Box, Typography, TextField, Button, Container } from \"@mui/material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport UserContext from '../context/UserContext';\r\n\r\nconst LoginPage = () => {\r\n  useContext\r\n  let context=useContext(UserContext)\r\n  const {loginCheck}=context\r\n    const[credentials,setCredentials]=useState({email:\"\",password:\"\"})\r\n      const handleChange = (e) => {\r\n        setCredentials({ ...credentials, [e.target.name]: e.target.value });\r\n    };\r\n    const navigate=useNavigate();\r\n    const handleSubmit = async(e) => {\r\n        e.preventDefault()\r\n       const result= await loginCheck({email:credentials.email,password:credentials.password});\r\n       if(loginCheck.success){\r\n          navigate('/')\r\n       }else{\r\n        alert(\"Invalid Credentials\")\r\n       }\r\n    }\r\n  return (\r\n    <Container>\r\n    <Paper\r\n      elevation={3}\r\n      sx={{\r\n        maxWidth: 400,\r\n        margin: \"auto\",\r\n        mt: 8,\r\n        p: 3,\r\n        borderRadius: 2,\r\n      }}\r\n    >\r\n        <Typography variant=\"h5\" textAlign=\"center\">\r\n          Login\r\n        </Typography>\r\n      <TextField label=\"Email\" name='email' value={credentials.email} onChange={handleChange} variant=\"outlined\" fullWidth sx={{mt:3}}/>\r\n      <TextField label=\"Password\" name='password' value={credentials.password} type=\"password\" sx={{mt:3}} onChange={handleChange} variant=\"outlined\" fullWidth />\r\n        <Button variant=\"contained\" sx={{my:3}} onClick={handleSubmit} fullWidth>\r\n          Login\r\n        </Button>\r\n      </Paper>\r\n\r\n    </Container>\r\n  );\r\n};\r\n\r\n\r\nexport default LoginPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}