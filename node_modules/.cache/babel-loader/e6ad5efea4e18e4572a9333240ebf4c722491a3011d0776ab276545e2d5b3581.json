{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web Dev\\\\React js\\\\inotebook\\\\src\\\\context\\\\UserState.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport UserContext from \"./UserContext\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UserState(props) {\n  _s();\n  const host = \"http://localhost:5000/\";\n  let navigate = useNavigate();\n  const [user, setUser] = useState(null);\n  const SignupCheck = async ({\n    name,\n    email,\n    password\n  }) => {\n    const response = await fetch(`http://localhost:5000/api/auth/createUser`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name,\n        email,\n        password\n      })\n    });\n    let json = await response.json();\n    if (json.success) {\n      localStorage.setItem(\"authToken\", json.authToken);\n      navigate('/');\n    } else {\n      alert(\"Invalid Credentials\");\n    }\n  };\n  const loginCheck = async ({\n    email,\n    password\n  }) => {\n    const response = await fetch(`http://localhost:5000/api/auth/login`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    });\n    let json = await response.json();\n    if (json.success) {\n      localStorage.setItem(\"authToken\", json.authToken);\n      navigate('/');\n    } else {\n      alert(\"Invalid Credentials\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      user,\n      loginCheck,\n      SignupCheck\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(UserState, \"ZVQ8M7GY0O491ARQa/+4iE4U7W8=\", false, function () {\n  return [useNavigate];\n});\n_c = UserState;\nvar _c;\n$RefreshReg$(_c, \"UserState\");","map":{"version":3,"names":["React","useState","UserContext","useNavigate","jsxDEV","_jsxDEV","UserState","props","_s","host","navigate","user","setUser","SignupCheck","name","email","password","response","fetch","method","headers","body","JSON","stringify","json","success","localStorage","setItem","authToken","alert","loginCheck","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Web Dev/React js/inotebook/src/context/UserState.js"],"sourcesContent":["import React, { useState } from \"react\"; \r\nimport UserContext from \"./UserContext\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nexport default function UserState(props) {\r\n  const host=\"http://localhost:5000/\"\r\n    let navigate=useNavigate()\r\n   const [user, setUser] = useState(null);\r\n    const SignupCheck = async ({ name, email, password }) => {\r\n    const response = await fetch(`http://localhost:5000/api/auth/createUser`, {\r\n        method: 'POST',\r\n        headers: {\r\n        'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ name, email, password })\r\n    });\r\n\r\n    let json = await response.json();\r\n    if (json.success) {\r\n        localStorage.setItem(\"authToken\", json.authToken);\r\n        navigate('/');\r\n    } else {\r\n        alert(\"Invalid Credentials\");\r\n    }\r\n    };\r\n\r\n  const loginCheck=  async ({email,password}) => {\r\n        const response = await fetch(`http://localhost:5000/api/auth/login`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({ email, password})\r\n        });\r\n        let json = await response.json();\r\n        if(json.success){\r\n            localStorage.setItem(\"authToken\",json.authToken)\r\n            navigate('/')\r\n        }else{\r\n            alert(\"Invalid Credentials\")\r\n        }\r\n    }\r\n\r\n\r\n\r\n  return (\r\n    <UserContext.Provider value={{user,loginCheck,SignupCheck}}>\r\n      {props.children}\r\n    </UserContext.Provider>\r\n  );\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,eAAe;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC/C,eAAe,SAASC,SAASA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACvC,MAAMC,IAAI,GAAC,wBAAwB;EACjC,IAAIC,QAAQ,GAACP,WAAW,CAAC,CAAC;EAC3B,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACrC,MAAMY,WAAW,GAAG,MAAAA,CAAO;IAAEC,IAAI;IAAEC,KAAK;IAAEC;EAAS,CAAC,KAAK;IACzD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,2CAA2C,EAAE;MACtEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACT,cAAc,EAAE;MAChB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAET,IAAI;QAAEC,KAAK;QAAEC;MAAS,CAAC;IAClD,CAAC,CAAC;IAEF,IAAIQ,IAAI,GAAG,MAAMP,QAAQ,CAACO,IAAI,CAAC,CAAC;IAChC,IAAIA,IAAI,CAACC,OAAO,EAAE;MACdC,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEH,IAAI,CAACI,SAAS,CAAC;MACjDlB,QAAQ,CAAC,GAAG,CAAC;IACjB,CAAC,MAAM;MACHmB,KAAK,CAAC,qBAAqB,CAAC;IAChC;EACA,CAAC;EAEH,MAAMC,UAAU,GAAG,MAAAA,CAAO;IAACf,KAAK;IAACC;EAAQ,CAAC,KAAK;IACzC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sCAAsC,EAAE;MACjEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAER,KAAK;QAAEC;MAAQ,CAAC;IAC3C,CAAC,CAAC;IACF,IAAIQ,IAAI,GAAG,MAAMP,QAAQ,CAACO,IAAI,CAAC,CAAC;IAChC,IAAGA,IAAI,CAACC,OAAO,EAAC;MACZC,YAAY,CAACC,OAAO,CAAC,WAAW,EAACH,IAAI,CAACI,SAAS,CAAC;MAChDlB,QAAQ,CAAC,GAAG,CAAC;IACjB,CAAC,MAAI;MACDmB,KAAK,CAAC,qBAAqB,CAAC;IAChC;EACJ,CAAC;EAIH,oBACExB,OAAA,CAACH,WAAW,CAAC6B,QAAQ;IAACC,KAAK,EAAE;MAACrB,IAAI;MAACmB,UAAU;MAACjB;IAAW,CAAE;IAAAoB,QAAA,EACxD1B,KAAK,CAAC0B;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAE3B;AAAC7B,EAAA,CA9CuBF,SAAS;EAAA,QAEhBH,WAAW;AAAA;AAAAmC,EAAA,GAFJhC,SAAS;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}